version: 2
jobs:
  test:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - run:
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[npm-release]"* ]]; then
              echo "[npm-release] detected. No publish necessary ğŸ‘Š"
              circleci step halt
            fi
      - run: node -v && npm -v && yarn -v
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn clean
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn lint
      - run: yarn test
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  npm_publish:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - run:
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[npm-release]"* ]]; then
              echo "[npm-release] detected. No publish necessary ğŸ‘Š"
              circleci step halt
            fi
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}      
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: 'npm run publish -- --yes --force-publish --dist-tag latest --message "chore(release): %v [npm-release]"'
workflows:
  version: 2
  do_build:
    jobs:
      - test:
          context: public_package_publish
      - npm_publish:
          requires:
            - test
          context: public_package_publish
          filters:
            branches:
              only:
                - master
