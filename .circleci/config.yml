version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7.3-node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - run: node -v && npm -v && yarn -v
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn clean
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn lint
      - run: yarn test
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  pre_release:
    docker:
      - image: circleci/python:3.7.3-node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - run: pip install awscli --upgrade --user
      - run: echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
      - run: node -v && npm -v && aws --version
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run: git status
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: export SHA=$(git rev-parse --short HEAD) && npm run publish -- prerelease --exact --yes --preid pre-$SHA --message "%s [skip ci]" --no-push --npm-tag prerelease
  canary:
    docker:
      - image: circleci/python:3.7.3-node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - run: pip install awscli --upgrade --user
      - run: echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
      - run: node -v && npm -v && aws --version
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run: git pull origin canary --tags
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm run publish -- --exact --yes --canary --preid canary --force-publish --npm-tag canary --message "%s [skip ci]" --no-push --no-git-reset --includeMergedTags
  dev_release:
    docker:
      - image: circleci/python:3.7.3-node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - run: pip install awscli --upgrade --user
      - run: echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
      - run: node -v && npm -v && aws --version
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm run publish -- --yes --force-publish --dist-tag beta --message "%s [skip ci]" --conventional-graduate
workflows:
  version: 2
  do_build:
    jobs:
      - test:
          context: public_package_publish
          filters:
            branches:
              ignore:
                - master
                - canary
      - pre_release:
          context: public_package_publish
          requires:
            - test
          filters:
            branches:
              only:
                - /prerelease\/.*/
      - canary:
          context: public_package_publish
          filters:
            branches:
              only:
                - canary
      - dev_release:
          context: public_package_publish
          requires:
            - test
          filters:
            branches:
              only:
                - dev
